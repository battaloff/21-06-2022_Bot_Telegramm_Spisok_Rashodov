import datetime

from aiogram.dispatcher.filters import Text
from aiogram.types import ReplyKeyboardMarkup, Message

from bot import bot, dp
from tools import DBTools


@dp.message_handler(commands=["start"])
async def start(message: Message):
    chat_id = message.chat.id
    full_name = message.from_user.full_name
    await register_user(message)
    await bot.send_message(chat_id, f"–ü—Ä–∏–≤–µ—Ç {full_name}")
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["üîΩ  –î–æ—Ö–æ–¥—ã", "üîº  –†–∞—Å—Ö–æ–¥—ã"]
    keyboard.add(*buttons)
    await message.answer("–°–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä:", reply_markup=keyboard)


async def register_user(message: Message):
    full_name = message.from_user.full_name
    chat_id = message.chat.id
    DBTools().user_tools.register_user(full_name, chat_id)


@dp.message_handler(Text(equals="üîΩ  –î–æ—Ö–æ–¥—ã"))
async def incomes_chosen(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["‚ûï  –î–æ–±–∞–≤–∏—Ç—å –î–æ—Ö–æ–¥—ã", "üôà  –ü–æ–∫–∞–∑–∞—Ç—å –î–æ—Ö–æ–¥—ã"]
    keyboard.add(*buttons)
    await message.answer("–ß—Ç–æ –≤—ã–±–µ—Ä–µ–º?", reply_markup=keyboard)


@dp.message_handler(Text(equals="‚ûï  –î–æ–±–∞–≤–∏—Ç—å –î–æ—Ö–æ–¥—ã"))  # TODO –ø–∏—à—É —Å—é–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–æ–≤
async def show_incomes_by_user(message: Message):
    chat_id = message.chat.id
    user_id = DBTools().user_tools.get_user_id(chat_id)
    date_time = datetime.datetime.now().strftime("%d-%m-%Y %H:%M:%S")
    income = DBTools().incomes_tools.add_income(user_id, int(input()), date_time)
    await bot.send_message(chat_id, f"–í–∞—à–∏ –¥–æ—Ö–æ–¥—ã, {income} !")


@dp.message_handler(Text(equals="üôà  –ü–æ–∫–∞–∑–∞—Ç—å –î–æ—Ö–æ–¥—ã"))
async def show_incomes_by_user(message: Message):
    chat_id = message.chat.id
    user_id = DBTools().user_tools.get_user_id(chat_id)
    incomes = DBTools().incomes_tools.get_incomes_by_user(user_id)
    await bot.send_message(chat_id, f"–í–∞—à–∏ –¥–æ—Ö–æ–¥—ã: {incomes} —Å—É–º")


@dp.message_handler(Text(equals="üîº  –†–∞—Å—Ö–æ–¥—ã"))
async def expenses_chosen(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["‚ûï  –î–æ–±–∞–≤–∏—Ç—å –†–∞—Å—Ö–æ–¥—ã", "–ü–æ–∫–∞–∑–∞—Ç—å –†–∞—Å—Ö–æ–¥—ã"]
    keyboard.add(*buttons)
    await message.answer("–ß—Ç–æ –≤—ã–±–µ—Ä–µ–º?", reply_markup=keyboard)


@dp.message_handler(Text(equals="–ü–æ–∫–∞–∑–∞—Ç—å –†–∞—Å—Ö–æ–¥—ã"))
async def expenses_chosen(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=4)
    buttons = ["–ó–∞ –ì–æ–¥", "–ó–∞ –ú–µ—Å—è—Ü", "–ó–∞ –Ω–µ–¥–µ–ª—é", "–ó–∞ –î–µ–Ω—å"]
    keyboard.add(*buttons)
    await message.answer("–ß—Ç–æ –≤—ã–±–µ—Ä–µ–º?", reply_markup=keyboard)


@dp.message_handler(Text(equals="–ó–∞ –ì–æ–¥"))
async def show_incomes_by_user(message: Message):
    chat_id = message.chat.id
    user_id = DBTools().user_tools.get_user_id(chat_id)
    incomes = DBTools().expenses_tools.get_expenses_by_datetime_and_user(user_id)
    await bot.send_message(chat_id, f"–í–∞—à–∏ –¥–æ—Ö–æ–¥—ã: {incomes} —Å—É–º")